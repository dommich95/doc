/* tslint:disable */
/* eslint-disable */
/**
 * Doctors API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Doctor
 */
export interface Doctor {
    /**
     * 
     * @type {number}
     * @memberof Doctor
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof Doctor
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof Doctor
     */
    email?: string;
    /**
     * 
     * @type {string}
     * @memberof Doctor
     */
    phone?: string;
    /**
     * 
     * @type {string}
     * @memberof Doctor
     */
    street?: string;
    /**
     * 
     * @type {string}
     * @memberof Doctor
     */
    city?: string;
    /**
     * 
     * @type {string}
     * @memberof Doctor
     */
    state?: string;
    /**
     * 
     * @type {string}
     * @memberof Doctor
     */
    zip?: string;
}

/**
 * Check if a given object implements the Doctor interface.
 */
export function instanceOfDoctor(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function DoctorFromJSON(json: any): Doctor {
    return DoctorFromJSONTyped(json, false);
}

export function DoctorFromJSONTyped(json: any, ignoreDiscriminator: boolean): Doctor {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'phone': !exists(json, 'phone') ? undefined : json['phone'],
        'street': !exists(json, 'street') ? undefined : json['street'],
        'city': !exists(json, 'city') ? undefined : json['city'],
        'state': !exists(json, 'state') ? undefined : json['state'],
        'zip': !exists(json, 'zip') ? undefined : json['zip'],
    };
}

export function DoctorToJSON(value?: Doctor | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'email': value.email,
        'phone': value.phone,
        'street': value.street,
        'city': value.city,
        'state': value.state,
        'zip': value.zip,
    };
}

